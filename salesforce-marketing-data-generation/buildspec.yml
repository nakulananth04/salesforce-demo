version: 0.2

env:
  variables:
    ECR_REPOSITORY: salesforce-marketing-lambda
    AWS_DEFAULT_REGION: ap-south-1
    PROJECT_DIR: salesforce-marketing-data-generation
    LAMBDA_FUNCTION_NAME: SalesforceMarketingDataGenLambda
    STACK_NAME: salesforce-marketing-lambda-stack

phases:
  install:
    commands:
      - pip install aws-sam-cli
      - sudo apt-get install -y jq

  pre_build:
    commands:
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin 595245034069.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - TIMESTAMP=$(date +%Y%m%d%H%M%S)
      - IMAGE_TAG=${COMMIT_HASH}-${TIMESTAMP}

  build:
    commands:
      - cd $PROJECT_DIR && docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
      - docker tag $ECR_REPOSITORY:$IMAGE_TAG 595245034069.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
      - docker tag $ECR_REPOSITORY:$IMAGE_TAG 595245034069.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY:latest

  post_build:
    commands:
      post_build:
  commands:
    - docker push 595245034069.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
    - docker push 595245034069.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY:latest
    - sam deploy --template-file template.yaml --stack-name $STACK_NAME --image-repository 595245034069.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY --parameter-overrides ECRRepository=$ECR_REPOSITORY ImageTag=$IMAGE_TAG --capabilities CAPABILITY_NAMED_IAM --region $AWS_DEFAULT_REGION --no-confirm-changeset --no-fail-on-empty-changeset
    - sleep 30
    - DEPLOYED_IMAGE=$(aws lambda get-function --function-name $LAMBDA_FUNCTION_NAME --query 'Configuration.Code.ImageUri' --output text 2>/dev/null || true); if [ -z "$DEPLOYED_IMAGE" ]; then echo "WARNING:Could not retrieve image URI immediately, checking CloudFormation status instead"; STACK_STATUS=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].StackStatus' --output text); if [ "$STACK_STATUS" != "CREATE_COMPLETE" ] && [ "$STACK_STATUS" != "UPDATE_COMPLETE" ]; then echo "ERROR:CloudFormation stack failed with status:$STACK_STATUS"; aws cloudformation describe-stack-events --stack-name $STACK_NAME --region $AWS_DEFAULT_REGION --max-items 20; exit 1; else echo "Stack deployed successfully, Lambda image URI may take more time to propagate"; exit 0; fi; elif ! echo "$DEPLOYED_IMAGE" | grep -q "$IMAGE_TAG"; then echo "ERROR:Deployment verification failed! Expected:$IMAGE_TAG, Actual:$DEPLOYED_IMAGE"; aws cloudformation describe-stack-events --stack-name $STACK_NAME --region $AWS_DEFAULT_REGION --max-items 20; exit 1; else echo "Deployment verified successfully:$DEPLOYED_IMAGE"; fi

artifacts:
  files:
    - $PROJECT_DIR/template.yaml